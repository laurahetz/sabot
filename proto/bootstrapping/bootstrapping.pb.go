// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.3
// source: bootstrapping.proto

package bootstrapping

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResetServer bool   `protobuf:"varint,1,opt,name=resetServer,proto3" json:"resetServer,omitempty"`
	Dbfile      string `protobuf:"bytes,2,opt,name=dbfile,proto3" json:"dbfile,omitempty"`
	MultiClient bool   `protobuf:"varint,3,opt,name=multiClient,proto3" json:"multiClient,omitempty"` //flag for benchmarking multi-client setting
	NumThreads  uint32 `protobuf:"varint,4,opt,name=numThreads,proto3" json:"numThreads,omitempty"`   //number of server threads
	CIdx        uint32 `protobuf:"varint,5,opt,name=cIdx,proto3" json:"cIdx,omitempty"`               //client sends index to obtain its KW
	NumTargets  uint32 `protobuf:"varint,6,opt,name=numTargets,proto3" json:"numTargets,omitempty"`   // how many receiver sender wants to contact
	ServerID    uint32 `protobuf:"varint,7,opt,name=serverID,proto3" json:"serverID,omitempty"`       //0 or 1 indicating which server is used
	DbType      []byte `protobuf:"bytes,8,opt,name=dbType,proto3" json:"dbType,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetResetServer() bool {
	if x != nil {
		return x.ResetServer
	}
	return false
}

func (x *Config) GetDbfile() string {
	if x != nil {
		return x.Dbfile
	}
	return ""
}

func (x *Config) GetMultiClient() bool {
	if x != nil {
		return x.MultiClient
	}
	return false
}

func (x *Config) GetNumThreads() uint32 {
	if x != nil {
		return x.NumThreads
	}
	return 0
}

func (x *Config) GetCIdx() uint32 {
	if x != nil {
		return x.CIdx
	}
	return 0
}

func (x *Config) GetNumTargets() uint32 {
	if x != nil {
		return x.NumTargets
	}
	return 0
}

func (x *Config) GetServerID() uint32 {
	if x != nil {
		return x.ServerID
	}
	return 0
}

func (x *Config) GetDbType() []byte {
	if x != nil {
		return x.DbType
	}
	return nil
}

// basically nothing needs to be transmitted here, just a "give params" request
type ParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CIdx       uint32 `protobuf:"varint,1,opt,name=cIdx,proto3" json:"cIdx,omitempty"`
	NumTargets uint32 `protobuf:"varint,2,opt,name=numTargets,proto3" json:"numTargets,omitempty"` // how many receiver sender wants to contact
}

func (x *ParamRequest) Reset() {
	*x = ParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamRequest) ProtoMessage() {}

func (x *ParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamRequest.ProtoReflect.Descriptor instead.
func (*ParamRequest) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{1}
}

func (x *ParamRequest) GetCIdx() uint32 {
	if x != nil {
		return x.CIdx
	}
	return 0
}

func (x *ParamRequest) GetNumTargets() uint32 {
	if x != nil {
		return x.NumTargets
	}
	return 0
}

type ParamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CKW     []byte    `protobuf:"bytes,1,opt,name=cKW,proto3" json:"cKW,omitempty"`
	Params  []*Params `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Targets []byte    `protobuf:"bytes,3,opt,name=targets,proto3" json:"targets,omitempty"` //flat list of kws of targets used to set up client
}

func (x *ParamResp) Reset() {
	*x = ParamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamResp) ProtoMessage() {}

func (x *ParamResp) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamResp.ProtoReflect.Descriptor instead.
func (*ParamResp) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{2}
}

func (x *ParamResp) GetCKW() []byte {
	if x != nil {
		return x.CKW
	}
	return nil
}

func (x *ParamResp) GetParams() []*Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ParamResp) GetTargets() []byte {
	if x != nil {
		return x.Targets
	}
	return nil
}

type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nrows       uint32   `protobuf:"varint,1,opt,name=nrows,proto3" json:"nrows,omitempty"`
	Auth        bool     `protobuf:"varint,2,opt,name=auth,proto3" json:"auth,omitempty"`               //specifies setting (false= semi-honest server, true=anytrust)
	Seed        uint64   `protobuf:"varint,3,opt,name=seed,proto3" json:"seed,omitempty"`               //for index mapping
	SegLen      uint32   `protobuf:"varint,4,opt,name=segLen,proto3" json:"segLen,omitempty"`           //for index mapping
	SegLenMask  uint32   `protobuf:"varint,5,opt,name=segLenMask,proto3" json:"segLenMask,omitempty"`   //for index mapping
	SegCount    uint32   `protobuf:"varint,6,opt,name=segCount,proto3" json:"segCount,omitempty"`       //for index mapping
	SegCountLen uint32   `protobuf:"varint,7,opt,name=segCountLen,proto3" json:"segCountLen,omitempty"` //for index mapping
	KeyLen      uint32   `protobuf:"varint,8,opt,name=keyLen,proto3" json:"keyLen,omitempty"`
	ValLen      uint32   `protobuf:"varint,9,opt,name=valLen,proto3" json:"valLen,omitempty"`
	RecLength   uint32   `protobuf:"varint,10,opt,name=recLength,proto3" json:"recLength,omitempty"`
	Root        []byte   `protobuf:"bytes,11,opt,name=root,proto3" json:"root,omitempty"`          //for merkle proof
	ProofLen    uint32   `protobuf:"varint,12,opt,name=proofLen,proto3" json:"proofLen,omitempty"` //for merkle proof
	List        []uint32 `protobuf:"varint,13,rep,packed,name=list,proto3" json:"list,omitempty"`  //for index mapping
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

func (x *Params) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{3}
}

func (x *Params) GetNrows() uint32 {
	if x != nil {
		return x.Nrows
	}
	return 0
}

func (x *Params) GetAuth() bool {
	if x != nil {
		return x.Auth
	}
	return false
}

func (x *Params) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *Params) GetSegLen() uint32 {
	if x != nil {
		return x.SegLen
	}
	return 0
}

func (x *Params) GetSegLenMask() uint32 {
	if x != nil {
		return x.SegLenMask
	}
	return 0
}

func (x *Params) GetSegCount() uint32 {
	if x != nil {
		return x.SegCount
	}
	return 0
}

func (x *Params) GetSegCountLen() uint32 {
	if x != nil {
		return x.SegCountLen
	}
	return 0
}

func (x *Params) GetKeyLen() uint32 {
	if x != nil {
		return x.KeyLen
	}
	return 0
}

func (x *Params) GetValLen() uint32 {
	if x != nil {
		return x.ValLen
	}
	return 0
}

func (x *Params) GetRecLength() uint32 {
	if x != nil {
		return x.RecLength
	}
	return 0
}

func (x *Params) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *Params) GetProofLen() uint32 {
	if x != nil {
		return x.ProofLen
	}
	return 0
}

func (x *Params) GetList() []uint32 {
	if x != nil {
		return x.List
	}
	return nil
}

type Setup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params  *ParamRequest `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	OwnKW   []byte        `protobuf:"bytes,2,opt,name=ownKW,proto3" json:"ownKW,omitempty"`
	Targets []byte        `protobuf:"bytes,3,opt,name=targets,proto3" json:"targets,omitempty"` //flat list of target keywords
}

func (x *Setup) Reset() {
	*x = Setup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setup) ProtoMessage() {}

func (x *Setup) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setup.ProtoReflect.Descriptor instead.
func (*Setup) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{4}
}

func (x *Setup) GetParams() *ParamRequest {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Setup) GetOwnKW() []byte {
	if x != nil {
		return x.OwnKW
	}
	return nil
}

func (x *Setup) GetTargets() []byte {
	if x != nil {
		return x.Targets
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpfKey []byte `protobuf:"bytes,1,opt,name=dpfKey,proto3" json:"dpfKey,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{5}
}

func (x *Query) GetDpfKey() []byte {
	if x != nil {
		return x.DpfKey
	}
	return nil
}

type Queries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []*Query `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *Queries) Reset() {
	*x = Queries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queries) ProtoMessage() {}

func (x *Queries) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queries.ProtoReflect.Descriptor instead.
func (*Queries) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{6}
}

func (x *Queries) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer []byte `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{7}
}

func (x *Answer) GetAnswer() []byte {
	if x != nil {
		return x.Answer
	}
	return nil
}

type Answers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answers []*Answer `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *Answers) Reset() {
	*x = Answers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answers) ProtoMessage() {}

func (x *Answers) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answers.ProtoReflect.Descriptor instead.
func (*Answers) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{8}
}

func (x *Answers) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type NotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx uint32  `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	Vec *Vector `protobuf:"bytes,2,opt,name=vec,proto3" json:"vec,omitempty"`
}

func (x *NotifyRequest) Reset() {
	*x = NotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRequest) ProtoMessage() {}

func (x *NotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRequest.ProtoReflect.Descriptor instead.
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{9}
}

func (x *NotifyRequest) GetIdx() uint32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *NotifyRequest) GetVec() *Vector {
	if x != nil {
		return x.Vec
	}
	return nil
}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx uint32 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{10}
}

func (x *Index) GetIdx() uint32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []byte `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{11}
}

func (x *Vector) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bootstrapping_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrapping_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_bootstrapping_proto_rawDescGZIP(), []int{12}
}

func (x *Ack) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_bootstrapping_proto protoreflect.FileDescriptor

var file_bootstrapping_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0xec, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x62, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x49, 0x64, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x49, 0x64, 0x78, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x49, 0x64, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x4b, 0x57, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x63, 0x4b, 0x57, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22,
	0xce, 0x02, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x67, 0x4c,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x67, 0x4c, 0x65, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x4c, 0x65, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x67, 0x4c, 0x65, 0x6e, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6b, 0x65, 0x79, 0x4c, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x63, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4c, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4c, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x6c, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x4b, 0x57, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x4b, 0x57, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x1f,
	0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x70, 0x66, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x70, 0x66, 0x4b, 0x65, 0x79, 0x22,
	0x39, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x07,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x4a, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x27, 0x0a, 0x03, 0x76,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x03, 0x76, 0x65, 0x63, 0x22, 0x19, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x78, 0x22,
	0x1a, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x15, 0x0a, 0x03, 0x41,
	0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x32, 0x9b, 0x03, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x75, 0x70, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x6b,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x62,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x1a, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x4d,
	0x61, 0x6b, 0x65, 0x49, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x0d, 0x4d, 0x61, 0x6b, 0x65, 0x4b, 0x57, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x00,
	0x42, 0x15, 0x5a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bootstrapping_proto_rawDescOnce sync.Once
	file_bootstrapping_proto_rawDescData = file_bootstrapping_proto_rawDesc
)

func file_bootstrapping_proto_rawDescGZIP() []byte {
	file_bootstrapping_proto_rawDescOnce.Do(func() {
		file_bootstrapping_proto_rawDescData = protoimpl.X.CompressGZIP(file_bootstrapping_proto_rawDescData)
	})
	return file_bootstrapping_proto_rawDescData
}

var file_bootstrapping_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_bootstrapping_proto_goTypes = []interface{}{
	(*Config)(nil),        // 0: bootstrapping.Config
	(*ParamRequest)(nil),  // 1: bootstrapping.ParamRequest
	(*ParamResp)(nil),     // 2: bootstrapping.ParamResp
	(*Params)(nil),        // 3: bootstrapping.Params
	(*Setup)(nil),         // 4: bootstrapping.Setup
	(*Query)(nil),         // 5: bootstrapping.Query
	(*Queries)(nil),       // 6: bootstrapping.Queries
	(*Answer)(nil),        // 7: bootstrapping.Answer
	(*Answers)(nil),       // 8: bootstrapping.Answers
	(*NotifyRequest)(nil), // 9: bootstrapping.NotifyRequest
	(*Index)(nil),         // 10: bootstrapping.Index
	(*Vector)(nil),        // 11: bootstrapping.Vector
	(*Ack)(nil),           // 12: bootstrapping.Ack
}
var file_bootstrapping_proto_depIdxs = []int32{
	3,  // 0: bootstrapping.ParamResp.params:type_name -> bootstrapping.Params
	1,  // 1: bootstrapping.Setup.params:type_name -> bootstrapping.ParamRequest
	5,  // 2: bootstrapping.Queries.queries:type_name -> bootstrapping.Query
	7,  // 3: bootstrapping.Answers.answers:type_name -> bootstrapping.Answer
	11, // 4: bootstrapping.NotifyRequest.vec:type_name -> bootstrapping.Vector
	0,  // 5: bootstrapping.Bootstrapping.SetupExperiment:input_type -> bootstrapping.Config
	1,  // 6: bootstrapping.Bootstrapping.GetParameters:input_type -> bootstrapping.ParamRequest
	9,  // 7: bootstrapping.Bootstrapping.SetColumn:input_type -> bootstrapping.NotifyRequest
	10, // 8: bootstrapping.Bootstrapping.GetRow:input_type -> bootstrapping.Index
	6,  // 9: bootstrapping.Bootstrapping.MakeIQueries:input_type -> bootstrapping.Queries
	6,  // 10: bootstrapping.Bootstrapping.MakeKWQueries:input_type -> bootstrapping.Queries
	2,  // 11: bootstrapping.Bootstrapping.SetupExperiment:output_type -> bootstrapping.ParamResp
	3,  // 12: bootstrapping.Bootstrapping.GetParameters:output_type -> bootstrapping.Params
	12, // 13: bootstrapping.Bootstrapping.SetColumn:output_type -> bootstrapping.Ack
	11, // 14: bootstrapping.Bootstrapping.GetRow:output_type -> bootstrapping.Vector
	8,  // 15: bootstrapping.Bootstrapping.MakeIQueries:output_type -> bootstrapping.Answers
	8,  // 16: bootstrapping.Bootstrapping.MakeKWQueries:output_type -> bootstrapping.Answers
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_bootstrapping_proto_init() }
func file_bootstrapping_proto_init() {
	if File_bootstrapping_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bootstrapping_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bootstrapping_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bootstrapping_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bootstrapping_proto_goTypes,
		DependencyIndexes: file_bootstrapping_proto_depIdxs,
		MessageInfos:      file_bootstrapping_proto_msgTypes,
	}.Build()
	File_bootstrapping_proto = out.File
	file_bootstrapping_proto_rawDesc = nil
	file_bootstrapping_proto_goTypes = nil
	file_bootstrapping_proto_depIdxs = nil
}
